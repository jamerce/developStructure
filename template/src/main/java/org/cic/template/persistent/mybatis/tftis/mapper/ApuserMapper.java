package org.cic.template.persistent.mybatis.tftis.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Param;
import org.cic.template.persistent.mybatis.tftis.model.Apuser;
import org.cic.template.persistent.mybatis.tftis.model.ApuserCriteria;

public interface ApuserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APUSER
     *
     * @mbg.generated Wed Aug 09 19:21:51 CST 2017
     */
    long countByExample(ApuserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APUSER
     *
     * @mbg.generated Wed Aug 09 19:21:51 CST 2017
     */
    int deleteByExample(ApuserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APUSER
     *
     * @mbg.generated Wed Aug 09 19:21:51 CST 2017
     */
    int insert(Apuser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APUSER
     *
     * @mbg.generated Wed Aug 09 19:21:51 CST 2017
     */
    int insertSelective(Apuser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APUSER
     *
     * @mbg.generated Wed Aug 09 19:21:51 CST 2017
     */
    List<Apuser> selectByExample(ApuserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APUSER
     *
     * @mbg.generated Wed Aug 09 19:21:51 CST 2017
     */
    int updateByExampleSelective(@Param("record") Apuser record, @Param("example") ApuserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APUSER
     *
     * @mbg.generated Wed Aug 09 19:21:51 CST 2017
     */
    int updateByExample(@Param("record") Apuser record, @Param("example") ApuserCriteria example);
}